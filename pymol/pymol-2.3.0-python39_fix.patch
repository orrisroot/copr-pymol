From 268d23ad99b1a449fd89aa3c9690d3f42d7994a5 Mon Sep 17 00:00:00 2001
From: Thomas Holder <thomas.holder@schrodinger.com>
Date: Wed, 22 Jan 2020 19:57:58 +0100
Subject: [PATCH] fix #78 replace "rU" file open modes with "r"

Obsolete in Python 3 and removed in 3.9
---
 create_shadertext.py                | 2 +-
 modules/pmg_qt/TextEditor.py        | 2 +-
 modules/pmg_tk/TextEditor.py        | 2 +-
 modules/pymol/invocation.py         | 2 +-
 modules/pymol/parser.py             | 2 +-
 modules/pymol/plugins/repository.py | 2 +-
 6 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/create_shadertext.py b/create_shadertext.py
index d29814035..f8bc97f8e 100644
--- a/create_shadertext.py
+++ b/create_shadertext.py
@@ -82,7 +82,7 @@ def create_shadertext(shaderdir, shaderdir2, outputheader, outputfile):
         if not os.path.exists(shaderfile):
             shaderfile = os.path.join(shaderdir2, filename)
 
-        with open(shaderfile, 'rU') as handle:
+        with open(shaderfile, 'r') as handle:
             contents = handle.read()
 
         if True:
diff --git a/modules/pmg_qt/TextEditor.py b/modules/pmg_qt/TextEditor.py
index 13af2123f..2b1af3250 100644
--- a/modules/pmg_qt/TextEditor.py
+++ b/modules/pmg_qt/TextEditor.py
@@ -31,7 +31,7 @@ def _write(self, handle):
     def _open(self, filename):
         self.filename = filename or ''
         if filename and os.path.exists(filename):
-            with open(filename, 'rU') as handle:
+            with open(filename, 'r') as handle:
                 content = handle.read()
         else:
             content = ''
diff --git a/modules/pmg_tk/TextEditor.py b/modules/pmg_tk/TextEditor.py
index 14c1ae722..70526f94f 100644
--- a/modules/pmg_tk/TextEditor.py
+++ b/modules/pmg_tk/TextEditor.py
@@ -26,7 +26,7 @@ def _write(self, handle):
     def _open(self, filename):
         self.filename = filename or ''
         if filename and os.path.exists(filename):
-            with open(filename, 'rU') as handle:
+            with open(filename, 'r') as handle:
                 content = handle.read()
         else:
             content = ''
diff --git a/modules/pymol/invocation.py b/modules/pymol/invocation.py
index a514091d8..5a4d21873 100644
--- a/modules/pymol/invocation.py
+++ b/modules/pymol/invocation.py
@@ -191,7 +191,7 @@ class generic:
     py_re = re.compile(r"\.py$|\.pym$|\.PY$|\.PYM$")
 
     def get_pwg_options(filename):
-        for line in open(filename, 'rU'):
+        for line in open(filename, 'r'):
             a = line.split()
             if not a or a[0].startswith('#'):
                 continue
diff --git a/modules/pymol/parser.py b/modules/pymol/parser.py
index d348c6520..5768639f3 100644
--- a/modules/pymol/parser.py
+++ b/modules/pymol/parser.py
@@ -397,7 +397,7 @@
                                         if re.search("\.py$|\.pym$",path) != None:
                                             if self.cmd._feedback(fb_module.parser,fb_mask.warnings):
                                                 print("Warning: use 'run' instead of '@' with Python files?")
-                                        layer.script = open(path,'rU')
+                                        layer.script = open(path,'r')
                                         self.cmd._pymol.__script__ = path
                                         self.nest=self.nest+1
                                         self.layer[self.nest] = NestLayer()
diff --git a/modules/pymol/plugins/repository.py b/modules/pymol/plugins/repository.py
index ec9a9b3c5..1ae536f3c 100644
--- a/modules/pymol/plugins/repository.py
+++ b/modules/pymol/plugins/repository.py
@@ -224,7 +224,7 @@ def list_scan(self):
 
     def retrieve(self, name, binary=True):
         url = self.get_full_url(name)
-        handle = open(url, "rb" if binary else "rU")
+        handle = open(url, "rb" if binary else "r")
         content = handle.read()
         handle.close()
         return content
